package org.eclipse.stardust.engine.api.ws;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * The WorkflowService provides all functionality for workflow operations in a
 * 	  CARNOT runtime environment.
 * 	  This includes:
 * 	  starting and aborting process instances,
 * 	  activating, completing, suspending and aborting activities,
 * 	  binding and unbinding event handlers,
 * 	  delegating activities, and
 * 	  accessing workflow data.
 * 	  
 *
 * This class was generated by Apache CXF 2.6.1
 * 2015-06-09T16:44:58.545+02:00
 * Generated source version: 2.6.1
 * 
 */
@WebService(targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api", name = "IWorkflowService")
@XmlSeeAlso({ObjectFactory.class})
public interface IWorkflowService {

    /**
     * Change the state of the specified activity instance to HIBERNATED.
     * 
     */
    @WebResult(name = "activityInstance", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
    @RequestWrapper(localName = "hibernateActivity", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api", className = "org.eclipse.stardust.engine.api.ws.HibernateActivity")
    @WebMethod(action = "hibernateActivity")
    @ResponseWrapper(localName = "hibernateActivityResponse", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api", className = "org.eclipse.stardust.engine.api.ws.HibernateActivityResponse")
    public org.eclipse.stardust.engine.api.ws.ActivityInstanceXto hibernateActivity(
        @WebParam(name = "activityOid", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
        long activityOid
    ) throws BpmFault;

    /**
     * Completes the interactive activity instance identified by the activityOid on the behalf of the currently logged-in user.
     * 
     */
    @WebResult(name = "activityInstance", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
    @RequestWrapper(localName = "completeActivity", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api", className = "org.eclipse.stardust.engine.api.ws.CompleteActivity")
    @WebMethod(action = "completeActivity")
    @ResponseWrapper(localName = "completeActivityResponse", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api", className = "org.eclipse.stardust.engine.api.ws.CompleteActivityResponse")
    public org.eclipse.stardust.engine.api.ws.ActivityInstanceXto completeActivity(
        @WebParam(name = "activityOid", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
        long activityOid,
        @WebParam(name = "context", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
        java.lang.String context,
        @WebParam(name = "outDataValues", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
        org.eclipse.stardust.engine.api.ws.ParametersXto outDataValues,
        @WebParam(name = "activate", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
        java.lang.Boolean activate
    ) throws BpmFault;

    /**
     * Aborts the specified process instance and joins the data into the specified target process instance.
     * Existing data values of the target process instance are not overwritten. Process attachments are merged.
     * 
     */
    @WebResult(name = "processInstance", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
    @RequestWrapper(localName = "joinProcessInstance", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api", className = "org.eclipse.stardust.engine.api.ws.JoinProcessInstance")
    @WebMethod(action = "joinProcessInstance")
    @ResponseWrapper(localName = "joinProcessInstanceResponse", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api", className = "org.eclipse.stardust.engine.api.ws.JoinProcessInstanceResponse")
    public org.eclipse.stardust.engine.api.ws.ProcessInstanceXto joinProcessInstance(
        @WebParam(name = "processInstanceOid", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
        long processInstanceOid,
        @WebParam(name = "targetProcessInstanceOid", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
        long targetProcessInstanceOid,
        @WebParam(name = "comment", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
        java.lang.String comment
    ) throws BpmFault;

    /**
     * Starts the process specified by the given ID using the provided data and returns the newly created process instance.
     * 
     */
    @WebResult(name = "processInstance", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
    @RequestWrapper(localName = "startProcess", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api", className = "org.eclipse.stardust.engine.api.ws.StartProcess")
    @WebMethod(action = "startProcess")
    @ResponseWrapper(localName = "startProcessResponse", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api", className = "org.eclipse.stardust.engine.api.ws.StartProcessResponse")
    public org.eclipse.stardust.engine.api.ws.ProcessInstanceXto startProcess(
        @WebParam(name = "processId", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
        java.lang.String processId,
        @WebParam(name = "parameters", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
        org.eclipse.stardust.engine.api.ws.ParametersXto parameters,
        @WebParam(name = "startSynchronously", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
        java.lang.Boolean startSynchronously,
        @WebParam(name = "attachments", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
        org.eclipse.stardust.engine.api.ws.InputDocumentsXto attachments,
        @WebParam(name = "benchmarkId", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
        java.lang.String benchmarkId
    ) throws BpmFault;

    /**
     * Activates the interactive activity instance identified by the activityOID.
     * 
     */
    @WebResult(name = "activityInstance", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
    @RequestWrapper(localName = "activateActivity", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api", className = "org.eclipse.stardust.engine.api.ws.ActivateActivity")
    @WebMethod(action = "activateActivity")
    @ResponseWrapper(localName = "activateActivityResponse", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api", className = "org.eclipse.stardust.engine.api.ws.ActivateActivityResponse")
    public org.eclipse.stardust.engine.api.ws.ActivityInstanceXto activateActivity(
        @WebParam(name = "activityOid", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
        long activityOid
    ) throws BpmFault;

    /**
     * Delegates the activity instance to the specified participant as follows:
     * If the participant is a DefaultPerformer, the activity is delegated to the default performer.
     * If the participant is an instance of UserInfo, the activity is delegated to the specified user.
     * If the participant is an instance of UserGroupInfo, it the activity is delegated to the specified user group.
     * If the participant is an instance of ModelParticipantInfo, it the activity is delegated to the specified model participant.
     * 
     */
    @WebResult(name = "activityInstance", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
    @RequestWrapper(localName = "delegateActivity", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api", className = "org.eclipse.stardust.engine.api.ws.DelegateActivity")
    @WebMethod(action = "delegateActivity")
    @ResponseWrapper(localName = "delegateActivityResponse", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api", className = "org.eclipse.stardust.engine.api.ws.DelegateActivityResponse")
    public org.eclipse.stardust.engine.api.ws.ActivityInstanceXto delegateActivity(
        @WebParam(name = "activityOid", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
        long activityOid,
        @WebParam(name = "participant", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
        org.eclipse.stardust.engine.api.ws.ParticipantInfoBaseXto participant
    ) throws BpmFault;

    /**
     * Aborts the specified process instance. Depending on the scope, it will abort either
     * this process instance only (including eventual subprocesses) or the whole process
     * hierarchy starting with the root process.
     * 
     */
    @WebResult(name = "processInstance", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
    @RequestWrapper(localName = "abortProcessInstance", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api", className = "org.eclipse.stardust.engine.api.ws.AbortProcessInstance")
    @WebMethod(action = "abortProcessInstance")
    @ResponseWrapper(localName = "abortProcessInstanceResponse", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api", className = "org.eclipse.stardust.engine.api.ws.AbortProcessInstanceResponse")
    public org.eclipse.stardust.engine.api.ws.ProcessInstanceXto abortProcessInstance(
        @WebParam(name = "oid", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
        long oid,
        @WebParam(name = "abortScope", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
        org.eclipse.stardust.engine.api.ws.AbortScopeXto abortScope
    ) throws BpmFault;

    /**
     * Binds an event handler to the specified activity instance.
     * 
     */
    @WebResult(name = "eventBinding", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
    @RequestWrapper(localName = "createActivityEventBinding", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api", className = "org.eclipse.stardust.engine.api.ws.CreateActivityEventBinding")
    @WebMethod(action = "createActivityEventBinding")
    @ResponseWrapper(localName = "createActivityEventBindingResponse", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api", className = "org.eclipse.stardust.engine.api.ws.CreateActivityEventBindingResponse")
    public org.eclipse.stardust.engine.api.ws.ActivityEventBindingXto createActivityEventBinding(
        @WebParam(name = "activityOid", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
        long activityOid,
        @WebParam(name = "bindingInfo", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
        org.eclipse.stardust.engine.api.ws.ActivityEventBindingXto bindingInfo
    ) throws BpmFault;

    /**
     * Sets multiple OUT data paths on a process instance as specified in the corresponding process definition.
     * New notes can be added by using the following parameters. The element named 'xml' must not exist.
     * (name='Note' namespace='http://eclipse.org/stardust/ws/v2012a/api' xml=empty primitive='your note text here')
     *          
     */
    @RequestWrapper(localName = "setProcessProperties", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api", className = "org.eclipse.stardust.engine.api.ws.SetProcessProperties")
    @WebMethod(action = "setProcessProperties")
    @ResponseWrapper(localName = "setProcessPropertiesResponse", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api", className = "org.eclipse.stardust.engine.api.ws.SetProcessPropertiesResponse")
    public void setProcessProperties(
        @WebParam(name = "processInstanceOid", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
        long processInstanceOid,
        @WebParam(name = "processProperties", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
        org.eclipse.stardust.engine.api.ws.InstancePropertiesXto processProperties
    ) throws BpmFault;

    /**
     * Suspends the specified activity instance to the a participant as follows:
     * If no participant is specified, the activity is added to the same worklist in which it was prior to activation.
     * If the participant is a DefaultPerformer, the activity is suspended to the default performer.
     * If the participant is an instance of UserInfo, the activity is suspended to the specified user.
     * If the participant is an instance of UserGroupInfo, it the activity is suspended to the specified user group.
     * If the participant is an instance of ModelParticipantInfo, it the activity is suspended to the specified model participant.
     * 
     */
    @WebResult(name = "activityInstance", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
    @RequestWrapper(localName = "suspendActivity", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api", className = "org.eclipse.stardust.engine.api.ws.SuspendActivity")
    @WebMethod(action = "suspendActivity")
    @ResponseWrapper(localName = "suspendActivityResponse", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api", className = "org.eclipse.stardust.engine.api.ws.SuspendActivityResponse")
    public org.eclipse.stardust.engine.api.ws.ActivityInstanceXto suspendActivity(
        @WebParam(name = "activityOid", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
        long activityOid,
        @WebParam(name = "participant", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
        org.eclipse.stardust.engine.api.ws.ParticipantInfoBaseXto participant,
        @WebParam(name = "context", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
        java.lang.String context,
        @WebParam(name = "outDataValues", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
        org.eclipse.stardust.engine.api.ws.ParametersXto outDataValues
    ) throws BpmFault;

    /**
     * Activates the next activity instance for the specified process instance.
     * 
     */
    @WebResult(name = "activityInstance", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
    @RequestWrapper(localName = "activateNextActivityForProcess", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api", className = "org.eclipse.stardust.engine.api.ws.ActivateNextActivityForProcess")
    @WebMethod(action = "activateNextActivityForProcess")
    @ResponseWrapper(localName = "activateNextActivityForProcessResponse", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api", className = "org.eclipse.stardust.engine.api.ws.ActivateNextActivityForProcessResponse")
    public org.eclipse.stardust.engine.api.ws.ActivityInstanceXto activateNextActivityForProcess(
        @WebParam(name = "processOid", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
        long processOid
    ) throws BpmFault;

    /**
     * Removes the process instances referenced by the specified memberOids from the specified case process instance.
     * 
     */
    @WebResult(name = "processInstance", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
    @RequestWrapper(localName = "leaveCase", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api", className = "org.eclipse.stardust.engine.api.ws.LeaveCase")
    @WebMethod(action = "leaveCase")
    @ResponseWrapper(localName = "leaveCaseResponse", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api", className = "org.eclipse.stardust.engine.api.ws.LeaveCaseResponse")
    public org.eclipse.stardust.engine.api.ws.ProcessInstanceXto leaveCase(
        @WebParam(name = "caseOid", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
        long caseOid,
        @WebParam(name = "memberOids", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
        org.eclipse.stardust.engine.api.ws.OidListXto memberOids
    ) throws BpmFault;

    /**
     * Retrieves information on the current user.
     * 
     */
    @WebResult(name = "user", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
    @RequestWrapper(localName = "getSessionUser", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api", className = "org.eclipse.stardust.engine.api.ws.GetSessionUser")
    @WebMethod(action = "getSessionUser")
    @ResponseWrapper(localName = "getSessionUserResponse", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api", className = "org.eclipse.stardust.engine.api.ws.GetSessionUserResponse")
    public org.eclipse.stardust.engine.api.ws.UserXto getSessionUser() throws BpmFault;

    /**
     * Unbinds an event handler from the specified process instance.
     * 
     */
    @WebResult(name = "eventBinding", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
    @RequestWrapper(localName = "removeProcessEventBinding", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api", className = "org.eclipse.stardust.engine.api.ws.RemoveProcessEventBinding")
    @WebMethod(action = "removeProcessEventBinding")
    @ResponseWrapper(localName = "removeProcessEventBindingResponse", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api", className = "org.eclipse.stardust.engine.api.ws.RemoveProcessEventBindingResponse")
    public org.eclipse.stardust.engine.api.ws.ProcessEventBindingXto removeProcessEventBinding(
        @WebParam(name = "processOid", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
        long processOid,
        @WebParam(name = "eventHandlerId", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
        java.lang.String eventHandlerId
    ) throws BpmFault;

    /**
     * Merges the specified source case process instances into the target case process instance by adding
     * all case members of the source case process instances as members of the target case process instance.
     * 
     */
    @WebResult(name = "processInstance", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
    @RequestWrapper(localName = "mergeCases", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api", className = "org.eclipse.stardust.engine.api.ws.MergeCases")
    @WebMethod(action = "mergeCases")
    @ResponseWrapper(localName = "mergeCasesResponse", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api", className = "org.eclipse.stardust.engine.api.ws.MergeCasesResponse")
    public org.eclipse.stardust.engine.api.ws.ProcessInstanceXto mergeCases(
        @WebParam(name = "targetCaseOid", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
        long targetCaseOid,
        @WebParam(name = "sourceCaseOids", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
        org.eclipse.stardust.engine.api.ws.OidListXto sourceCaseOids,
        @WebParam(name = "comment", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
        java.lang.String comment
    ) throws BpmFault;

    /**
     * Retrieves the list of process definitions that can be started by the current user.
     * 
     */
    @WebResult(name = "processDefinitions", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
    @RequestWrapper(localName = "getStartableProcessDefinitions", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api", className = "org.eclipse.stardust.engine.api.ws.GetStartableProcessDefinitions")
    @WebMethod(action = "getStartableProcessDefinitions")
    @ResponseWrapper(localName = "getStartableProcessDefinitionsResponse", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api", className = "org.eclipse.stardust.engine.api.ws.GetStartableProcessDefinitionsResponse")
    public org.eclipse.stardust.engine.api.ws.ProcessDefinitionsXto getStartableProcessDefinitions() throws BpmFault;

    /**
     * Binds an event handler to the specified process instance.
     * 
     */
    @WebResult(name = "eventBinding", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
    @RequestWrapper(localName = "createProcessEventBinding", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api", className = "org.eclipse.stardust.engine.api.ws.CreateProcessEventBinding")
    @WebMethod(action = "createProcessEventBinding")
    @ResponseWrapper(localName = "createProcessEventBindingResponse", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api", className = "org.eclipse.stardust.engine.api.ws.CreateProcessEventBindingResponse")
    public org.eclipse.stardust.engine.api.ws.ProcessEventBindingXto createProcessEventBinding(
        @WebParam(name = "processOid", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
        long processOid,
        @WebParam(name = "bindingInfo", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
        org.eclipse.stardust.engine.api.ws.ProcessEventBindingXto bindingInfo
    ) throws BpmFault;

    /**
     * Aborts the specified activity instance, effectively aborting the whole process instance hierarchy this activity instance belongs to.
     * 
     */
    @WebResult(name = "activityInstance", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
    @RequestWrapper(localName = "abortActivity", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api", className = "org.eclipse.stardust.engine.api.ws.AbortActivity")
    @WebMethod(action = "abortActivity")
    @ResponseWrapper(localName = "abortActivityResponse", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api", className = "org.eclipse.stardust.engine.api.ws.AbortActivityResponse")
    public org.eclipse.stardust.engine.api.ws.ActivityInstanceXto abortActivity(
        @WebParam(name = "activityOid", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
        long activityOid,
        @WebParam(name = "abortScope", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
        org.eclipse.stardust.engine.api.ws.AbortScopeXto abortScope
    ) throws BpmFault;

    /**
     * Retrieves all permissions the current user has on this service.
     * 
     */
    @WebResult(name = "permissions", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
    @RequestWrapper(localName = "getPermissions", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api", className = "org.eclipse.stardust.engine.api.ws.GetPermissions")
    @WebMethod(action = "getPermissions")
    @ResponseWrapper(localName = "getPermissionsResponse", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api", className = "org.eclipse.stardust.engine.api.ws.GetPermissionsResponse")
    public org.eclipse.stardust.engine.api.ws.PermissionsXto getPermissions() throws BpmFault;

    /**
     * Updates the value of a business object instance.
     *       
     */
    @WebResult(name = "businessObject", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
    @RequestWrapper(localName = "updateBusinessObjectInstance", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api", className = "org.eclipse.stardust.engine.api.ws.UpdateBusinessObjectInstance")
    @WebMethod(action = "updateBusinessObjectInstance")
    @ResponseWrapper(localName = "updateBusinessObjectInstanceResponse", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api", className = "org.eclipse.stardust.engine.api.ws.UpdateBusinessObjectInstanceResponse")
    public org.eclipse.stardust.engine.api.ws.BusinessObjectXto updateBusinessObjectInstance(
        @WebParam(name = "qualifiedBusinessObjectId", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
        java.lang.String qualifiedBusinessObjectId,
        @WebParam(name = "newValue", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
        org.eclipse.stardust.engine.api.ws.ParameterXto newValue
    ) throws BpmFault;

    /**
     * Activates the interactive activity instance identified by the activityOID and
     * retrieves all evaluated IN data mappings that match the provided interaction context for the specified activity.
     * 
     */
    @WebResult(name = "inDataValues", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
    @RequestWrapper(localName = "activateActivityAndGetInData", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api", className = "org.eclipse.stardust.engine.api.ws.ActivateActivityAndGetInData")
    @WebMethod(action = "activateActivityAndGetInData")
    @ResponseWrapper(localName = "activateActivityAndGetInDataResponse", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api", className = "org.eclipse.stardust.engine.api.ws.ActivateActivityAndGetInDataResponse")
    public org.eclipse.stardust.engine.api.ws.ParametersXto activateActivityAndGetInData(
        @WebParam(name = "activityOid", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
        long activityOid,
        @WebParam(name = "context", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
        java.lang.String context
    ) throws BpmFault;

    /**
     * Spawns multiple processes as subprocesses of the specified process instance.
     * The spawned processes execute asynchronously but have to be completed before the parent process is able to complete.
     * 
     */
    @WebResult(name = "processInstances", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
    @RequestWrapper(localName = "spawnSubprocessInstances", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api", className = "org.eclipse.stardust.engine.api.ws.SpawnSubprocessInstances")
    @WebMethod(action = "spawnSubprocessInstances")
    @ResponseWrapper(localName = "spawnSubprocessInstancesResponse", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api", className = "org.eclipse.stardust.engine.api.ws.SpawnSubprocessInstancesResponse")
    public org.eclipse.stardust.engine.api.ws.ProcessInstancesXto spawnSubprocessInstances(
        @WebParam(name = "processInstanceOid", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
        long processInstanceOid,
        @WebParam(name = "processSpawnInfos", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
        org.eclipse.stardust.engine.api.ws.ProcessSpawnInfosXto processSpawnInfos
    ) throws BpmFault;

    /**
     * Spawns a new root process and creates a link of type ProcessInstanceLinkType.SWITCH to the specified process instance.
     * Optionally existing data from the specified process instance can be copied to the newly spawned process.
     * 
     */
    @WebResult(name = "processInstance", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
    @RequestWrapper(localName = "spawnPeerProcessInstance", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api", className = "org.eclipse.stardust.engine.api.ws.SpawnPeerProcessInstance")
    @WebMethod(action = "spawnPeerProcessInstance")
    @ResponseWrapper(localName = "spawnPeerProcessInstanceResponse", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api", className = "org.eclipse.stardust.engine.api.ws.SpawnPeerProcessInstanceResponse")
    public org.eclipse.stardust.engine.api.ws.ProcessInstanceXto spawnPeerProcessInstance(
        @WebParam(name = "processInstanceOid", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
        long processInstanceOid,
        @WebParam(name = "spawnProcessId", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
        java.lang.String spawnProcessId,
        @WebParam(name = "copyData", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
        boolean copyData,
        @WebParam(name = "parameters", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
        org.eclipse.stardust.engine.api.ws.ParametersXto parameters,
        @WebParam(name = "abortProcessInstance", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
        boolean abortProcessInstance,
        @WebParam(name = "comment", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
        java.lang.String comment
    ) throws BpmFault;

    /**
     * Gets the binding state of an event handler for the specified process instance.
     *          
     */
    @WebResult(name = "eventBinding", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
    @RequestWrapper(localName = "getProcessEventBinding", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api", className = "org.eclipse.stardust.engine.api.ws.GetProcessEventBinding")
    @WebMethod(action = "getProcessEventBinding")
    @ResponseWrapper(localName = "getProcessEventBindingResponse", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api", className = "org.eclipse.stardust.engine.api.ws.GetProcessEventBindingResponse")
    public org.eclipse.stardust.engine.api.ws.ProcessEventBindingXto getProcessEventBinding(
        @WebParam(name = "processOid", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
        long processOid,
        @WebParam(name = "eventHandlerId", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
        java.lang.String eventHandlerId
    ) throws BpmFault;

    /**
     * Retrieves the specified process instance.
     * 
     */
    @WebResult(name = "processInstance", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
    @RequestWrapper(localName = "getProcess", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api", className = "org.eclipse.stardust.engine.api.ws.GetProcess")
    @WebMethod(action = "getProcess")
    @ResponseWrapper(localName = "getProcessResponse", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api", className = "org.eclipse.stardust.engine.api.ws.GetProcessResponse")
    public org.eclipse.stardust.engine.api.ws.ProcessInstanceXto getProcess(
        @WebParam(name = "processOid", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
        long processOid
    ) throws BpmFault;

    /**
     * Gets the binding state of an event handler for the specified activity instance.
     * 
     */
    @WebResult(name = "eventBinding", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
    @RequestWrapper(localName = "getActivityEventBinding", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api", className = "org.eclipse.stardust.engine.api.ws.GetActivityEventBinding")
    @WebMethod(action = "getActivityEventBinding")
    @ResponseWrapper(localName = "getActivityEventBindingResponse", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api", className = "org.eclipse.stardust.engine.api.ws.GetActivityEventBindingResponse")
    public org.eclipse.stardust.engine.api.ws.ActivityEventBindingXto getActivityEventBinding(
        @WebParam(name = "activityOid", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
        long activityOid,
        @WebParam(name = "eventHandlerId", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
        java.lang.String eventHandlerId
    ) throws BpmFault;

    /**
     * Retrieves multiple IN data paths from a process instance as specified in the corresponding process definition.
     * Also notes are contained and are identified by the following parameters.
     * (name='Note' namespace='http://eclipse.org/stardust/ws/v2012a/api')
     * 
     */
    @WebResult(name = "processProperties", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
    @RequestWrapper(localName = "getProcessProperties", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api", className = "org.eclipse.stardust.engine.api.ws.GetProcessProperties")
    @WebMethod(action = "getProcessProperties")
    @ResponseWrapper(localName = "getProcessPropertiesResponse", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api", className = "org.eclipse.stardust.engine.api.ws.GetProcessPropertiesResponse")
    public org.eclipse.stardust.engine.api.ws.InstancePropertiesXto getProcessProperties(
        @WebParam(name = "processInstanceOid", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
        long processInstanceOid,
        @WebParam(name = "propertyIds", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
        org.eclipse.stardust.engine.api.ws.GetProcessProperties.PropertyIdsXto propertyIds
    ) throws BpmFault;

    /**
     * Creates a case process instance which groups the specified members as subprocesses.
     * 
     */
    @WebResult(name = "processInstance", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
    @RequestWrapper(localName = "createCase", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api", className = "org.eclipse.stardust.engine.api.ws.CreateCase")
    @WebMethod(action = "createCase")
    @ResponseWrapper(localName = "createCaseResponse", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api", className = "org.eclipse.stardust.engine.api.ws.CreateCaseResponse")
    public org.eclipse.stardust.engine.api.ws.ProcessInstanceXto createCase(
        @WebParam(name = "name", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
        java.lang.String name,
        @WebParam(name = "description", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
        java.lang.String description,
        @WebParam(name = "memberOids", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
        org.eclipse.stardust.engine.api.ws.OidListXto memberOids
    ) throws BpmFault;

    /**
     * Activates the next activity instance after the specified one in the same process instance.
     * 
     */
    @WebResult(name = "activityInstance", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
    @RequestWrapper(localName = "activateNextActivity", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api", className = "org.eclipse.stardust.engine.api.ws.ActivateNextActivity")
    @WebMethod(action = "activateNextActivity")
    @ResponseWrapper(localName = "activateNextActivityResponse", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api", className = "org.eclipse.stardust.engine.api.ws.ActivateNextActivityResponse")
    public org.eclipse.stardust.engine.api.ws.ActivityInstanceXto activateNextActivity(
        @WebParam(name = "activityOid", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
        java.lang.Long activityOid,
        @WebParam(name = "worklistQuery", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
        org.eclipse.stardust.engine.api.ws.query.WorklistQueryXto worklistQuery
    ) throws BpmFault;

    /**
     * Deletes a business object instance.
     *       
     */
    @RequestWrapper(localName = "deleteBusinessObjectInstance", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api", className = "org.eclipse.stardust.engine.api.ws.DeleteBusinessObjectInstance")
    @WebMethod(action = "deleteBusinessObjectInstance")
    @ResponseWrapper(localName = "deleteBusinessObjectInstanceResponse", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api", className = "org.eclipse.stardust.engine.api.ws.DeleteBusinessObjectInstanceResponse")
    public void deleteBusinessObjectInstance(
        @WebParam(name = "qualifiedBusinessObjectId", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
        java.lang.String qualifiedBusinessObjectId,
        @WebParam(name = "primaryKey", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
        org.eclipse.stardust.engine.api.ws.ParameterXto primaryKey
    ) throws BpmFault;

    /**
     * Creates a new business object instance if it does not exist.
     *       
     */
    @WebResult(name = "businessObject", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
    @RequestWrapper(localName = "createBusinessObjectInstance", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api", className = "org.eclipse.stardust.engine.api.ws.CreateBusinessObjectInstance")
    @WebMethod(action = "createBusinessObjectInstance")
    @ResponseWrapper(localName = "createBusinessObjectInstanceResponse", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api", className = "org.eclipse.stardust.engine.api.ws.CreateBusinessObjectInstanceResponse")
    public org.eclipse.stardust.engine.api.ws.BusinessObjectXto createBusinessObjectInstance(
        @WebParam(name = "qualifiedBusinessObjectId", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
        java.lang.String qualifiedBusinessObjectId,
        @WebParam(name = "initialValue", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
        org.eclipse.stardust.engine.api.ws.ParameterXto initialValue
    ) throws BpmFault;

    /**
     * Delegates the case process instance to the specified participant.
     * 
     */
    @WebResult(name = "processInstance", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
    @RequestWrapper(localName = "delegateCase", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api", className = "org.eclipse.stardust.engine.api.ws.DelegateCase")
    @WebMethod(action = "delegateCase")
    @ResponseWrapper(localName = "delegateCaseResponse", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api", className = "org.eclipse.stardust.engine.api.ws.DelegateCaseResponse")
    public org.eclipse.stardust.engine.api.ws.ProcessInstanceXto delegateCase(
        @WebParam(name = "caseOid", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
        long caseOid,
        @WebParam(name = "participantInfo", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
        org.eclipse.stardust.engine.api.ws.ParticipantInfoXto participantInfo
    ) throws BpmFault;

    /**
     * Unbinds an event handler from the specified activity instance.
     * 
     */
    @WebResult(name = "eventBinding", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
    @RequestWrapper(localName = "removeActivityEventBinding", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api", className = "org.eclipse.stardust.engine.api.ws.RemoveActivityEventBinding")
    @WebMethod(action = "removeActivityEventBinding")
    @ResponseWrapper(localName = "removeActivityEventBindingResponse", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api", className = "org.eclipse.stardust.engine.api.ws.RemoveActivityEventBindingResponse")
    public org.eclipse.stardust.engine.api.ws.ActivityEventBindingXto removeActivityEventBinding(
        @WebParam(name = "activityOid", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
        long activityOid,
        @WebParam(name = "eventHandlerId", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
        java.lang.String eventHandlerId
    ) throws BpmFault;

    /**
     * Retrieves the specified activity instance.
     * 
     */
    @WebResult(name = "activityInstance", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
    @RequestWrapper(localName = "getActivity", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api", className = "org.eclipse.stardust.engine.api.ws.GetActivity")
    @WebMethod(action = "getActivity")
    @ResponseWrapper(localName = "getActivityResponse", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api", className = "org.eclipse.stardust.engine.api.ws.GetActivityResponse")
    public org.eclipse.stardust.engine.api.ws.ActivityInstanceXto getActivity(
        @WebParam(name = "activityOid", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
        long activityOid
    ) throws BpmFault;

    /**
     * Completes the interactive activity instance identified by the activityOid on the behalf of the currently logged-in user and
     * activates the next activity instance after the specified one in the same process instance.
     * 
     */
    @WebResult(name = "activityInstances", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
    @RequestWrapper(localName = "completeActivityAndActivateNext", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api", className = "org.eclipse.stardust.engine.api.ws.CompleteActivityAndActivateNext")
    @WebMethod(action = "completeActivityAndActivateNext")
    @ResponseWrapper(localName = "completeActivityAndActivateNextResponse", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api", className = "org.eclipse.stardust.engine.api.ws.CompleteActivityAndActivateNextResponse")
    public org.eclipse.stardust.engine.api.ws.ActivityInstancesXto completeActivityAndActivateNext(
        @WebParam(name = "activityOid", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
        long activityOid,
        @WebParam(name = "context", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
        java.lang.String context,
        @WebParam(name = "outDataValues", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
        org.eclipse.stardust.engine.api.ws.ParametersXto outDataValues,
        @WebParam(name = "activate", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
        java.lang.Boolean activate
    ) throws BpmFault;

    /**
     * Logs an audit trail event of type LogCode.EXTERNAL.
     * 
     */
    @RequestWrapper(localName = "writeLogEntry", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api", className = "org.eclipse.stardust.engine.api.ws.WriteLogEntry")
    @WebMethod(action = "writeLogEntry")
    @ResponseWrapper(localName = "writeLogEntryResponse", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api", className = "org.eclipse.stardust.engine.api.ws.WriteLogEntryResponse")
    public void writeLogEntry(
        @WebParam(name = "logType", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
        org.eclipse.stardust.engine.api.ws.LogTypeXto logType,
        @WebParam(name = "activityOid", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
        java.lang.Long activityOid,
        @WebParam(name = "processOid", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
        java.lang.Long processOid,
        @WebParam(name = "message", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
        java.lang.String message
    ) throws BpmFault;

    /**
     * Retrieves (parts of) the worklist of the current logged in user satisfying the criteria specified in the provided query.
     * 
     */
    @WebResult(name = "worklist", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
    @RequestWrapper(localName = "findWorklist", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api", className = "org.eclipse.stardust.engine.api.ws.FindWorklist")
    @WebMethod(action = "findWorklist")
    @ResponseWrapper(localName = "findWorklistResponse", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api", className = "org.eclipse.stardust.engine.api.ws.FindWorklistResponse")
    public org.eclipse.stardust.engine.api.ws.WorklistXto findWorklist(
        @WebParam(name = "worklistQuery", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
        org.eclipse.stardust.engine.api.ws.query.WorklistQueryXto worklistQuery
    ) throws BpmFault;

    /**
     * Adds the process instances referenced by the specified memberOids to the specified case process instance.
     * 
     */
    @WebResult(name = "processInstance", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
    @RequestWrapper(localName = "joinCase", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api", className = "org.eclipse.stardust.engine.api.ws.JoinCase")
    @WebMethod(action = "joinCase")
    @ResponseWrapper(localName = "joinCaseResponse", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api", className = "org.eclipse.stardust.engine.api.ws.JoinCaseResponse")
    public org.eclipse.stardust.engine.api.ws.ProcessInstanceXto joinCase(
        @WebParam(name = "caseOid", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
        long caseOid,
        @WebParam(name = "memberOids", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
        org.eclipse.stardust.engine.api.ws.OidListXto memberOids
    ) throws BpmFault;

    /**
     * Retrieves all evaluated IN data mappings that match the provided interaction context for the specified activity.
     * 
     */
    @WebResult(name = "inDataValues", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
    @RequestWrapper(localName = "getActivityInData", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api", className = "org.eclipse.stardust.engine.api.ws.GetActivityInData")
    @WebMethod(action = "getActivityInData")
    @ResponseWrapper(localName = "getActivityInDataResponse", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api", className = "org.eclipse.stardust.engine.api.ws.GetActivityInDataResponse")
    public org.eclipse.stardust.engine.api.ws.ParametersXto getActivityInData(
        @WebParam(name = "activityOid", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
        long activityOid,
        @WebParam(name = "context", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
        java.lang.String context,
        @WebParam(name = "dataIds", targetNamespace = "http://eclipse.org/stardust/ws/v2012a/api")
        org.eclipse.stardust.engine.api.ws.GetActivityInData.DataIdsXto dataIds
    ) throws BpmFault;
}
